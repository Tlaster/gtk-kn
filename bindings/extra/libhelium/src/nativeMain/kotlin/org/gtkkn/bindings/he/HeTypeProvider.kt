// This is a generated file. Do not modify.
package org.gtkkn.bindings.he

import org.gtkkn.extensions.gobject.KGType
import org.gtkkn.extensions.gobject.TypeProvider
import kotlin.collections.Map
import kotlin.reflect.KClass

public object HeTypeProvider : TypeProvider {
    override val typeMap: Map<KClass<*>, KGType<*>> =
        mapOf(
            SchemesContent::class to SchemesContent.type,
            SchemesDefault::class to SchemesDefault.type,
            SchemesMonochrome::class to SchemesMonochrome.type,
            SchemesMuted::class to SchemesMuted.type,
            SchemesVibrant::class to SchemesVibrant.type,
            Application::class to Application.type,
            Bin::class to Bin.type,
            Button::class to Button.type,
            ButtonContent::class to ButtonContent.type,
            Scheme::class to Scheme.type,
            View::class to View.type,
            Window::class to Window.type,
            Desktop::class to Desktop.type,
            Quantizer::class to Quantizer.type,
            QuantizerCelebi::class to QuantizerCelebi.type,
            QuantizerMap::class to QuantizerMap.type,
            QuantizerResult::class to QuantizerResult.type,
            QuantizerWsmeans::class to QuantizerWsmeans.type,
            QuantizerWu::class to QuantizerWu.type,
            Score::class to Score.type,
            ScoreAnnotatedColor::class to ScoreAnnotatedColor.type,
            ViewingConditions::class to ViewingConditions.type,
            AboutWindow::class to AboutWindow.type,
            AppBar::class to AppBar.type,
            ApplicationWindow::class to ApplicationWindow.type,
            Avatar::class to Avatar.type,
            Badge::class to Badge.type,
            Banner::class to Banner.type,
            BottomBar::class to BottomBar.type,
            Chip::class to Chip.type,
            ChipGroup::class to ChipGroup.type,
            ContentBlock::class to ContentBlock.type,
            ContentBlockImage::class to ContentBlockImage.type,
            ContentBlockImageCluster::class to ContentBlockImageCluster.type,
            ContentList::class to ContentList.type,
            DatePicker::class to DatePicker.type,
            Dialog::class to Dialog.type,
            DisclosureButton::class to DisclosureButton.type,
            EmptyPage::class to EmptyPage.type,
            FillButton::class to FillButton.type,
            IconicButton::class to IconicButton.type,
            MiniContentBlock::class to MiniContentBlock.type,
            ModifierBadge::class to ModifierBadge.type,
            NavigationRail::class to NavigationRail.type,
            OutlineButton::class to OutlineButton.type,
            OverlayButton::class to OverlayButton.type,
            PillButton::class to PillButton.type,
            SegmentedButton::class to SegmentedButton.type,
            SettingsList::class to SettingsList.type,
            SettingsPage::class to SettingsPage.type,
            SettingsRow::class to SettingsRow.type,
            SettingsWindow::class to SettingsWindow.type,
            SideBar::class to SideBar.type,
            SwitchBar::class to SwitchBar.type,
            Tab::class to Tab.type,
            TabPage::class to TabPage.type,
            TabSwitcher::class to TabSwitcher.type,
            TextButton::class to TextButton.type,
            TextField::class to TextField.type,
            TimePicker::class to TimePicker.type,
            TintButton::class to TintButton.type,
            Toast::class to Toast.type,
            ViewAux::class to ViewAux.type,
            ViewChooser::class to ViewChooser.type,
            ViewDual::class to ViewDual.type,
            ViewMono::class to ViewMono.type,
            ViewSubTitle::class to ViewSubTitle.type,
            ViewSwitcher::class to ViewSwitcher.type,
            ViewTitle::class to ViewTitle.type,
            WelcomeScreen::class to WelcomeScreen.type,
        )
}
